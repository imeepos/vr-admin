{"version":3,"file":"GenerateMeshBVHWorker-Dn1KMUCF.js","sources":["../../frontend/node_modules/three-mesh-bvh/src/workers/utils/WorkerBase.js","../../frontend/node_modules/@needle-tools/engine/lib/engine/physics/workers/mesh-bvh/GenerateMeshBVHWorker.js"],"sourcesContent":["export class WorkerBase {\n\n\tconstructor( worker ) {\n\n\t\tthis.name = 'WorkerBase';\n\t\tthis.running = false;\n\t\tthis.worker = worker;\n\t\tthis.worker.onerror = e => {\n\n\t\t\tif ( e.message ) {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker with error \"${ e.message }\"` );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( `${ this.name }: Could not create Web Worker.` );\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\trunTask() {}\n\n\tgenerate( ...args ) {\n\n\t\tif ( this.running ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Already running job.' );\n\n\t\t}\n\n\t\tif ( this.worker === null ) {\n\n\t\t\tthrow new Error( 'GenerateMeshBVHWorker: Worker has been disposed.' );\n\n\t\t}\n\n\t\tthis.running = true;\n\n\t\tconst promise = this.runTask( this.worker, ...args );\n\t\tpromise.finally( () => {\n\n\t\t\tthis.running = false;\n\n\t\t} );\n\n\t\treturn promise;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.worker.terminate();\n\t\tthis.worker = null;\n\n\t}\n\n}\n","import { Box3, BufferAttribute } from 'three';\nimport { MeshBVH } from 'three-mesh-bvh';\n// Modified according to https://github.com/gkjohnson/three-mesh-bvh/issues/636#issuecomment-2209571751\nimport { WorkerBase } from \"three-mesh-bvh/src/workers/utils/WorkerBase.js\";\nexport class GenerateMeshBVHWorker extends WorkerBase {\n    constructor() {\n        // TODO: make mesh bvh worker \"work\" for prebundled CDN loading\n        // https://linear.app/needle/issue/NE-6572\n        // Also we don't use toplevel imports to not completely fail to load needle-engine where loading the worker fails\n        // const meta_url = import.meta.url;\n        // const getWorker = () => new Worker(url, { type: 'module' })\n        // console.log(meta_url, url, getWorker());\n        super(new Worker(new URL('three-mesh-bvh/src/workers/generateMeshBVH.worker.js', import.meta.url), { type: 'module' }));\n        this.name = 'GenerateMeshBVHWorker';\n    }\n    runTask(worker, geometry, options = {}) {\n        return new Promise((resolve, reject) => {\n            if (geometry.getAttribute('position').isInterleavedBufferAttribute ||\n                geometry.index && geometry.index.isInterleavedBufferAttribute) {\n                throw new Error('GenerateMeshBVHWorker: InterleavedBufferAttribute are not supported for the geometry attributes.');\n            }\n            worker.onerror = e => {\n                reject(new Error(`[GenerateMeshBVHWorker] ${e.message || \"Unknown error. Please check the server console. If you're using vite try adding 'three-mesh-bvh' to 'optimizeDeps.exclude' in your vite.config.js\"}`));\n            };\n            worker.onmessage = e => {\n                const { data } = e;\n                if (data.error) {\n                    reject(new Error(data.error));\n                    worker.onmessage = null;\n                }\n                else if (data.serialized) {\n                    const { serialized, position } = data;\n                    const bvh = MeshBVH.deserialize(serialized, geometry, { setIndex: false });\n                    const boundsOptions = Object.assign({\n                        setBoundingBox: true,\n                    }, options);\n                    // we need to replace the arrays because they're neutered entirely by the\n                    // webworker transfer.\n                    geometry.attributes.position.array = position;\n                    if (serialized.index) {\n                        if (geometry.index) {\n                            geometry.index.array = serialized.index;\n                        }\n                        else {\n                            const newIndex = new BufferAttribute(serialized.index, 1, false);\n                            geometry.setIndex(newIndex);\n                        }\n                    }\n                    if (boundsOptions.setBoundingBox) {\n                        geometry.boundingBox = bvh.getBoundingBox(new Box3());\n                    }\n                    if (options.onProgress) {\n                        options.onProgress(data.progress);\n                    }\n                    resolve(bvh);\n                    worker.onmessage = null;\n                }\n                else if (options.onProgress) {\n                    options.onProgress(data.progress);\n                }\n            };\n            const index = geometry.index ? geometry.index.array : null;\n            const position = geometry.attributes.position.array;\n            const transferable = [position];\n            if (index) {\n                transferable.push(index);\n            }\n            worker.postMessage({\n                index,\n                position,\n                options: {\n                    ...options,\n                    onProgress: null,\n                    includedProgressCallback: Boolean(options.onProgress),\n                    groups: [...geometry.groups],\n                },\n            }, transferable.map(arr => arr.buffer).filter(v => (typeof SharedArrayBuffer === 'undefined') || !(v instanceof SharedArrayBuffer)));\n        });\n    }\n}\n//# sourceMappingURL=GenerateMeshBVHWorker.js.map"],"names":["position"],"mappings":"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","x_google_ignoreList":[0,1]}