# =================================
# VR Admin 环境变量配置
# =================================
# 复制此文件为 .env 并根据实际情况修改配置

# ================================
# 应用基础配置
# ================================
NODE_ENV=production
APP_PORT=3001

# ================================
# PostgreSQL 数据库配置
# ================================
# 数据库主机地址（Docker 容器内使用服务名）
DB_HOST=postgres
# 数据库端口
DB_PORT=5432
# 数据库用户名
DB_USERNAME=postgres
# 数据库密码（生产环境请使用强密码）
DB_PASSWORD=password
# 数据库名称
DB_DATABASE=vr_admin
# 数据库SSL连接（生产环境建议启用）
DB_SSL=false

# ================================
# JWT 认证配置
# ================================
# JWT 密钥（生产环境必须使用强随机密钥，至少32位）
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
# JWT 过期时间
JWT_EXPIRES_IN=24h
# JWT 签发者
JWT_ISSUER=vr-admin
# JWT 受众
JWT_AUDIENCE=vr-admin-users

# ================================
# 管理员 API 密钥配置
# ================================
# 管理员 API 密钥（可选，用于绕过常规鉴权的系统级访问）
# 使用此密钥可直接获得管理员权限访问所有 GraphQL 接口
# 请求时需在 Header 中添加：X-Admin-API-Key: your-admin-key
# 生产环境务必使用强随机密钥并严格保密
ADMIN_API_KEY=your-super-secret-admin-api-key-change-this-in-production
# 管理员用户名（使用 ADMIN_API_KEY 时从数据库获取此用户作为管理员）
ADMIN_USERNAME=admin

# ================================
# API 路由配置
# ================================
# API 前缀
API_PREFIX=api
# GraphQL 端点路径
GRAPHQL_PATH=graphql

# ================================
# 文件存储配置
# ================================
# 存储类型: LOCAL 或 S3
STORAGE_TYPE=LOCAL
# 应用基础URL（用于生成文件访问链接）
APP_BASE_URL=http://0.0.0.0:3001

# ================================
# S3存储配置（当STORAGE_TYPE=S3时使用）
# ================================
# S3 区域
S3_REGION=us-east-1
# S3 端点（可选，用于MinIO等兼容服务）
# S3_ENDPOINT=https://minio.example.com
# S3 存储桶名称
S3_BUCKET=vr-admin-uploads
# S3 访问密钥ID
S3_ACCESS_KEY_ID=your-access-key-id
# S3 访问密钥
S3_SECRET_ACCESS_KEY=your-secret-access-key
# 是否强制路径风格（MinIO通常需要）
S3_FORCE_PATH_STYLE=false
# S3 公共访问基础URL（可选，用于CDN）
# S3_PUBLIC_BASE_URL=https://cdn.example.com

# ================================
# 开发环境配置说明
# ================================
# NODE_ENV 可选值：
# - development: 开发环境，启用详细日志和 GraphQL Playground
# - production: 生产环境，关闭调试功能
# - test: 测试环境

# ================================
# Docker 部署说明
# ================================
# 1. 确保 .env 文件中的配置与 docker-compose.yml 一致
# 2. 生产环境中数据库密码和 JWT 密钥必须使用强密码
# 3. DB_HOST 在 Docker 容器内应使用服务名 'postgres'
# 4. WSL2环境下必须使用0.0.0.0绑定，不能使用localhost